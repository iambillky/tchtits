<!--
File: templates/network_devices/index.html
Purpose: Main network device view with filtering and device management
Version: 1.0.0
Author: iambilky

Revision History:
- v1.0.0: Initial creation with device listing and filters
-->

{% extends "base.html" %}

{% block title %}Network Devices{% endblock %}

{% block extra_css %}
<style>
    /* ========== SUMMARY CARDS ========== */
    .summary-cards {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }
    
    .summary-card {
        background: rgba(255, 255, 255, 0.05);
        border-radius: 12px;
        padding: 20px;
        text-align: center;
        border: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .summary-label {
        color: #8b92a5;
        font-size: 0.9rem;
        margin-bottom: 8px;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }
    
    .summary-value {
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 5px;
    }
    
    .summary-value.total { color: #60a5fa; }
    .summary-value.private { color: #a78bfa; }
    .summary-value.public { color: #34d399; }
    .summary-value.active { color: #10b981; }
    
    .summary-subtitle {
        color: #8b92a5;
        font-size: 0.85rem;
    }
    
    /* ========== FILTER BAR ========== */
    .filter-bar {
        background: rgba(255, 255, 255, 0.05);
        border-radius: 12px;
        padding: 20px;
        margin-bottom: 30px;
        display: flex;
        gap: 15px;
        align-items: center;
        flex-wrap: wrap;
    }
    
    .filter-group {
        display: flex;
        flex-direction: column;
        gap: 5px;
    }
    
    .filter-label {
        color: #8b92a5;
        font-size: 0.85rem;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }
    
    .filter-select {
        background: rgba(255, 255, 255, 0.08);
        border: 1px solid rgba(255, 255, 255, 0.15);
        border-radius: 8px;
        padding: 8px 12px;
        color: #fff;
        min-width: 150px;
        cursor: pointer;
    }
    
    .filter-select:focus {
        outline: none;
        border-color: #60a5fa;
        background: rgba(255, 255, 255, 0.1);
    }
    
    .btn-apply-filter {
        background: linear-gradient(135deg, #3b82f6, #2563eb);
        border: none;
        color: white;
        padding: 8px 20px;
        border-radius: 8px;
        cursor: pointer;
        margin-top: auto;
    }
    
    .btn-apply-filter:hover {
        background: linear-gradient(135deg, #2563eb, #1d4ed8);
    }
    
    .btn-reset-filter {
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        color: #e4e6eb;
        padding: 8px 20px;
        border-radius: 8px;
        cursor: pointer;
        margin-top: auto;
        text-decoration: none;
    }
    
    .btn-reset-filter:hover {
        background: rgba(255, 255, 255, 0.15);
        color: #fff;
        text-decoration: none;
    }
    
    /* ========== DEVICE TABLE ========== */
    .device-table {
        background: rgba(255, 255, 255, 0.03);
        border-radius: 12px;
        overflow: hidden;
    }
    
    .device-table th {
        background: rgba(255, 255, 255, 0.05);
        color: #fff;
        font-weight: 600;
        padding: 15px;
        text-align: left;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .device-table td {
        color: #e4e6eb;
        padding: 12px 15px;
        border-bottom: 1px solid rgba(255, 255, 255, 0.03);
    }
    
    .device-table tr:hover {
        background: rgba(255, 255, 255, 0.02);
    }
    
    /* ========== BADGES ========== */
    .network-badge {
        padding: 4px 10px;
        border-radius: 6px;
        font-size: 0.85rem;
        font-weight: 600;
        display: inline-block;
    }
    
    .network-badge.private {
        background: rgba(167, 139, 250, 0.2);
        color: #a78bfa;
        border: 1px solid rgba(167, 139, 250, 0.3);
    }
    
    .network-badge.public {
        background: rgba(52, 211, 153, 0.2);
        color: #34d399;
        border: 1px solid rgba(52, 211, 153, 0.3);
    }
    
    .device-type-badge {
        padding: 4px 10px;
        border-radius: 6px;
        font-size: 0.85rem;
        font-weight: 600;
        display: inline-block;
        background: rgba(96, 165, 250, 0.2);
        color: #60a5fa;
        border: 1px solid rgba(96, 165, 250, 0.3);
    }
    
    .status-badge {
        padding: 4px 10px;
        border-radius: 6px;
        font-size: 0.85rem;
        font-weight: 600;
        display: inline-block;
    }
    
    .status-badge.active {
        background: rgba(16, 185, 129, 0.2);
        color: #10b981;
        border: 1px solid rgba(16, 185, 129, 0.3);
    }
    
    .status-badge.spare {
        background: rgba(251, 191, 36, 0.2);
        color: #fbbf24;
        border: 1px solid rgba(251, 191, 36, 0.3);
    }
    
    .status-badge.failed {
        background: rgba(239, 68, 68, 0.2);
        color: #ef4444;
        border: 1px solid rgba(239, 68, 68, 0.3);
    }
    
    .status-badge.maintenance {
        background: rgba(245, 158, 11, 0.2);
        color: #f59e0b;
        border: 1px solid rgba(245, 158, 11, 0.3);
    }
    
    /* ========== POWER STATUS ========== */
    .power-status {
        display: flex;
        align-items: center;
        gap: 5px;
    }
    
    .power-indicator {
        width: 8px;
        height: 8px;
        border-radius: 50%;
    }
    
    .power-indicator.redundant {
        background: #10b981;
        box-shadow: 0 0 8px rgba(16, 185, 129, 0.5);
    }
    
    .power-indicator.single {
        background: #fbbf24;
        box-shadow: 0 0 8px rgba(251, 191, 36, 0.5);
    }
    
    .power-indicator.none {
        background: #6b7280;
    }
    
    /* ========== ACTION BUTTONS ========== */
    .action-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
    }
    
    .btn-group {
        display: flex;
        gap: 10px;
    }
    
    /* ========== EMPTY STATE ========== */
    .empty-state {
        text-align: center;
        padding: 60px 20px;
        color: #8b92a5;
    }
    
    .empty-state-icon {
        font-size: 3rem;
        margin-bottom: 20px;
        opacity: 0.5;
    }
</style>
{% endblock %}

{% block content %}
<div class="page-header">
    <h1 class="page-title">Network Infrastructure</h1>
    <p class="page-subtitle">Switches, routers, and network equipment management</p>
</div>

<!-- ========== SUMMARY CARDS ========== -->
<div class="summary-cards">
    <div class="summary-card">
        <div class="summary-label">Total Devices</div>
        <div class="summary-value total">{{ total_devices }}</div>
        <div class="summary-subtitle">Network devices</div>
    </div>
    
    <div class="summary-card">
        <div class="summary-label">Private Network</div>
        <div class="summary-value private">{{ private_count }}</div>
        <div class="summary-subtitle">INT switches</div>
    </div>
    
    <div class="summary-card">
        <div class="summary-label">Public Network</div>
        <div class="summary-value public">{{ public_count }}</div>
        <div class="summary-subtitle">DISTRO/CORE</div>
    </div>
    
    <div class="summary-card">
        <div class="summary-label">Active Devices</div>
        <div class="summary-value active">{{ active_count }}</div>
        <div class="summary-subtitle">In production</div>
    </div>
</div>

<!-- ========== ACTION BAR ========== -->
<div class="action-bar">
    <h2 style="color: #fff; font-size: 1.3rem;">Device Inventory</h2>
    
    <div class="btn-group">
        <a href="{{ url_for('network_devices.add_device') }}" class="btn btn-primary">
            <span style="margin-right: 8px;">âž•</span> Add Device
        </a>
        <button class="btn btn-secondary" onclick="exportTable()">
            <span style="margin-right: 8px;">ðŸ“Š</span> Export CSV
        </button>
    </div>
</div>

<!-- ========== FILTER BAR ========== -->
<div class="filter-bar">
    <form method="GET" action="{{ url_for('network_devices.index') }}" style="display: contents;">
        <div class="filter-group">
            <label class="filter-label">Network Type</label>
            <select name="network_type" class="filter-select">
                <option value="all" {% if current_filters.network_type == 'all' %}selected{% endif %}>All Networks</option>
                <option value="private" {% if current_filters.network_type == 'private' %}selected{% endif %}>Private (INT)</option>
                <option value="public" {% if current_filters.network_type == 'public' %}selected{% endif %}>Public (DISTRO/CORE)</option>
            </select>
        </div>
        
        <div class="filter-group">
            <label class="filter-label">Device Type</label>
            <select name="device_type" class="filter-select">
                <option value="all" {% if current_filters.device_type == 'all' %}selected{% endif %}>All Types</option>
                <option value="Switch" {% if current_filters.device_type == 'Switch' %}selected{% endif %}>Switch</option>
                <option value="Core" {% if current_filters.device_type == 'Core' %}selected{% endif %}>Core Switch/Router</option>
                <option value="Firewall" {% if current_filters.device_type == 'Firewall' %}selected{% endif %}>Firewall</option>
                <option value="Load Balancer" {% if current_filters.device_type == 'Load Balancer' %}selected{% endif %}>Load Balancer</option>
                <option value="Other" {% if current_filters.device_type == 'Other' %}selected{% endif %}>Other</option>
            </select>
        </div>
        
        <div class="filter-group">
            <label class="filter-label">Rack Location</label>
            <select name="rack" class="filter-select">
                <option value="all" {% if current_filters.rack == 'all' %}selected{% endif %}>All Racks</option>
                {% for rack in racks %}
                <option value="{{ rack.id }}" {% if current_filters.rack == rack.id|string %}selected{% endif %}>
                    {{ rack.rack_id }}
                </option>
                {% endfor %}
            </select>
        </div>
        
        <button type="submit" class="btn-apply-filter">Apply Filters</button>
        <a href="{{ url_for('network_devices.index') }}" class="btn-reset-filter">Reset</a>
    </form>
</div>

<!-- ========== DEVICE TABLE ========== -->
<div class="card">
    <div class="card-body" style="padding: 0;">
        {% if devices %}
        <table class="device-table" style="width: 100%;">
            <thead>
                <tr>
                    <th>Identifier</th>
                    <th>Hostname</th>
                    <th>Type</th>
                    <th>Network</th>
                    <th>Location</th>
                    <th>Management IP</th>
                    <th>Ports</th>
                    <th>Power</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                {% for device in devices %}
                <tr>
                    <td><strong>{{ device.identifier }}</strong></td>
                    <td>{{ device.hostname }}</td>
                    <td>
                        <span class="device-type-badge">{{ device.device_type }}</span>
                    </td>
                    <td>
                        <span class="network-badge {{ device.network_type }}">
                            {{ device.network_type|upper }}
                        </span>
                    </td>
                    <td>
                        {{ device.rack.rack_id }} / {{ device.rack_position }}
                    </td>
                    <td>
                        {% if device.management_ip %}
                            <code style="color: #60a5fa;">{{ device.management_ip }}</code>
                        {% else %}
                            <span style="color: #6b7280;">-</span>
                        {% endif %}
                    </td>
                    <td>
                        {% if device.port_count %}
                            {{ device.port_count }}
                        {% else %}
                            <span style="color: #6b7280;">-</span>
                        {% endif %}
                    </td>
                    <td>
                        <div class="power-status">
                            {% if device.has_redundant_power %}
                                <span class="power-indicator redundant"></span>
                                <span style="font-size: 0.85rem;">Redundant</span>
                            {% elif device.pdu_1_id or device.pdu_2_id %}
                                <span class="power-indicator single"></span>
                                <span style="font-size: 0.85rem;">Single</span>
                            {% else %}
                                <span class="power-indicator none"></span>
                                <span style="font-size: 0.85rem; color: #6b7280;">None</span>
                            {% endif %}
                        </div>
                    </td>
                    <td>
                        <span class="status-badge {{ device.status }}">
                            {{ device.status|upper }}
                        </span>
                    </td>
                    <td>
                        <div class="btn-group">
                            <a href="{{ url_for('network_devices.edit_device', device_id=device.id) }}" 
                               class="btn btn-sm btn-secondary">Edit</a>
                            <form method="POST" action="{{ url_for('network_devices.delete_device', device_id=device.id) }}" 
                                  style="display: inline;" 
                                  onsubmit="return confirm('Delete network device {{ device.identifier }}?');">
                                <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                            </form>
                        </div>
                    </td>
                </tr>
                {% endfor %}
            </tbody>
        </table>
        {% else %}
        <!-- ========== EMPTY STATE ========== -->
        <div class="empty-state">
            <div class="empty-state-icon">ðŸ”Œ</div>
            <h3>No Network Devices Found</h3>
            <p>
                {% if current_filters.network_type != 'all' or current_filters.device_type != 'all' or current_filters.rack != 'all' %}
                    No devices match your current filters. Try adjusting them.
                {% else %}
                    Start by adding your first network device.
                {% endif %}
            </p>
            {% if current_filters.network_type != 'all' or current_filters.device_type != 'all' or current_filters.rack != 'all' %}
                <a href="{{ url_for('network_devices.index') }}" class="btn btn-primary mt-3">
                    Clear Filters
                </a>
            {% else %}
                <a href="{{ url_for('network_devices.add_device') }}" class="btn btn-primary mt-3">
                    <span style="margin-right: 8px;">âž•</span> Add First Device
                </a>
            {% endif %}
        </div>
        {% endif %}
    </div>
</div>

{% endblock %}

{% block extra_js %}
<script>
// ========== EXPORT TO CSV ==========
function exportTable() {
    const table = document.querySelector('.device-table');
    if (!table) {
        alert('No data to export');
        return;
    }
    
    let csv = [];
    
    // Headers
    const headers = Array.from(table.querySelectorAll('thead th')).map(th => th.textContent);
    csv.push(headers.slice(0, -1).join(','));  // Exclude Actions column
    
    // Data
    const rows = table.querySelectorAll('tbody tr');
    rows.forEach(row => {
        const cols = Array.from(row.querySelectorAll('td')).slice(0, -1);
        const data = cols.map(col => {
            // Clean up the text content
            let text = col.textContent.trim();
            // Remove extra whitespace
            text = text.replace(/\s+/g, ' ');
            // Wrap in quotes if contains comma
            if (text.includes(',')) {
                text = `"${text}"`;
            }
            return text;
        });
        csv.push(data.join(','));
    });
    
    // Download
    const csvContent = csv.join('\n');
    const blob = new Blob([csvContent], { type: 'text/csv' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'network_devices_export.csv';
    a.click();
}
</script>
{% endblock %}