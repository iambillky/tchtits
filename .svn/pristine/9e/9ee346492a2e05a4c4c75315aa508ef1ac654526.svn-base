<!--
File: templates/datacenters/add_rack.html
Purpose: Form template for adding racks to a floor
Version: 1.1.0
Author: iambilky

Revision History:
- v1.0.0: Initial creation with all rack fields including 4-digit access code
- v1.1.0: Added real-time duplicate rack ID checking with visual warnings
-->

{% extends "base.html" %}

{% block title %}Add Rack{% endblock %}

{% block extra_css %}
<style>
    /* ========== CONTEXT BAR ========== */
    .context-bar {
        background: rgba(59, 130, 246, 0.1);
        border: 1px solid rgba(59, 130, 246, 0.2);
        border-radius: 12px;
        padding: 20px;
        margin-bottom: 30px;
    }
    
    .context-path {
        display: flex;
        align-items: center;
        gap: 15px;
        flex-wrap: wrap;
    }
    
    .context-item {
        display: flex;
        align-items: center;
        gap: 8px;
    }
    
    .context-icon {
        font-size: 1.2rem;
    }
    
    .context-label {
        color: #8b92a5;
        font-size: 0.9rem;
    }
    
    .context-value {
        color: #60a5fa;
        font-weight: 600;
    }
    
    .context-separator {
        color: #4b5563;
        font-size: 1.2rem;
    }
    
    /* ========== FORM CONTAINER ========== */
    .form-container {
        max-width: 800px;
        margin: 0 auto;
    }
    
    .form-card {
        background: rgba(255, 255, 255, 0.05);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 12px;
        padding: 30px;
    }
    
    /* ========== FORM SECTIONS ========== */
    .form-section {
        margin-bottom: 30px;
    }
    
    .form-section-title {
        color: #60a5fa;
        font-size: 1.1rem;
        font-weight: 600;
        margin-bottom: 20px;
        padding-bottom: 10px;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    /* ========== FORM GROUPS ========== */
    .form-group {
        margin-bottom: 25px;
    }
    
    .form-label {
        display: block;
        color: #e4e6eb;
        font-weight: 500;
        margin-bottom: 8px;
        font-size: 0.95rem;
    }
    
    .form-label .required {
        color: #ef4444;
        margin-left: 3px;
    }
    
    /* ========== FORM CONTROLS ========== */
    .form-control {
        width: 100%;
        background: rgba(255, 255, 255, 0.08);
        border: 1px solid rgba(255, 255, 255, 0.15);
        border-radius: 8px;
        padding: 10px 14px;
        color: #fff;
        font-size: 1rem;
        transition: all 0.2s ease;
    }
    
    .form-control:focus {
        outline: none;
        background: rgba(255, 255, 255, 0.1);
        border-color: #60a5fa;
        box-shadow: 0 0 0 3px rgba(96, 165, 250, 0.1);
    }
    
    .form-control::placeholder {
        color: #6b7280;
    }
    
    textarea.form-control {
        resize: vertical;
        min-height: 100px;
        font-family: inherit;
    }
    
    /* ========== RACK CODE INPUT ========== */
    .rack-code-input {
        font-size: 1.5rem;
        letter-spacing: 0.3em;
        text-align: center;
        font-weight: 600;
        font-family: 'Courier New', monospace;
    }
    
    .rack-code-wrapper {
        position: relative;
    }
    
    .rack-code-lock {
        position: absolute;
        right: 15px;
        top: 50%;
        transform: translateY(-50%);
        font-size: 1.2rem;
        color: #60a5fa;
    }
    
    /* ========== VALIDATION FEEDBACK ========== */
    .invalid-feedback {
        display: block;
        color: #ef4444;
        font-size: 0.875rem;
        margin-top: 5px;
    }
    
    .form-control.is-invalid {
        border-color: #ef4444;
    }
    
    /* ========== HELP TEXT ========== */
    .form-text {
        display: block;
        color: #8b92a5;
        font-size: 0.875rem;
        margin-top: 5px;
    }
    
    /* ========== PREVIEW BOX ========== */
    .preview-box {
        background: rgba(16, 185, 129, 0.1);
        border: 1px solid rgba(16, 185, 129, 0.2);
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 25px;
    }
    
    .preview-label {
        color: #8b92a5;
        font-size: 0.875rem;
        margin-bottom: 5px;
    }
    
    .preview-value {
        color: #10b981;
        font-size: 1.2rem;
        font-weight: 600;
        font-family: 'Courier New', monospace;
    }
    
    /* ========== DUPLICATE WARNING ========== */
    .duplicate-warning {
        background: rgba(239, 68, 68, 0.1);
        border: 1px solid rgba(239, 68, 68, 0.3);
        border-radius: 8px;
        padding: 12px;
        margin-top: 10px;
        display: none;
        align-items: center;
        gap: 10px;
    }
    
    .duplicate-warning.show {
        display: flex;
    }
    
    .duplicate-warning-icon {
        color: #ef4444;
        font-size: 1.2rem;
    }
    
    .duplicate-warning-text {
        color: #f87171;
        flex: 1;
    }
    
    .form-control.duplicate {
        border-color: #ef4444 !important;
        background: rgba(239, 68, 68, 0.05);
    }
    
    /* ========== BUTTON GROUP ========== */
    .button-group {
        display: flex;
        gap: 15px;
        margin-top: 35px;
        padding-top: 25px;
        border-top: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .btn-success {
        background: linear-gradient(135deg, #10b981, #059669);
        border: none;
        color: white;
        padding: 12px 30px;
        border-radius: 8px;
        font-weight: 500;
        transition: all 0.2s ease;
        cursor: pointer;
    }
    
    .btn-success:hover {
        background: linear-gradient(135deg, #059669, #047857);
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3);
    }
    
    .btn-cancel {
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        color: #e4e6eb;
        padding: 12px 30px;
        border-radius: 8px;
        font-weight: 500;
        transition: all 0.2s ease;
        text-decoration: none;
        cursor: pointer;
    }
    
    .btn-cancel:hover {
        background: rgba(255, 255, 255, 0.15);
        color: #fff;
        border-color: rgba(255, 255, 255, 0.3);
        text-decoration: none;
    }
    
    /* ========== RESPONSIVE GRID ========== */
    .form-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 20px;
    }
    
    @media (max-width: 768px) {
        .form-row {
            grid-template-columns: 1fr;
        }
        
        .context-path {
            flex-direction: column;
            align-items: flex-start;
        }
        
        .context-separator {
            display: none;
        }
    }
</style>
{% endblock %}

{% block content %}
<div class="page-header">
    <h1 class="page-title">Add New Rack</h1>
    <p class="page-subtitle">Configure a new rack in the data center</p>
</div>

<!-- ========== CONTEXT BAR ========== -->
<div class="context-bar">
    <div class="context-path">
        <div class="context-item">
            <span class="context-icon">üè¢</span>
            <span class="context-label">Data Center:</span>
            <span class="context-value">{{ floor.datacenter.code }} - {{ floor.datacenter.name }}</span>
        </div>
        <span class="context-separator">‚Üí</span>
        <div class="context-item">
            <span class="context-icon">üìç</span>
            <span class="context-label">Floor:</span>
            <span class="context-value">{{ floor.provider_designation }} ({{ floor.actual_floor }})</span>
        </div>
    </div>
</div>

<div class="form-container">
    <div class="form-card">
        <!-- ========== RACK ID PREVIEW ========== -->
        <div class="preview-box" id="rackIdPreview" style="display: none;">
            <div class="preview-label">Rack ID will be:</div>
            <div class="preview-value" id="rackIdValue">-</div>
        </div>
        
        <form method="POST" action="{{ url_for('datacenters.add_rack', floor_id=floor.id) }}" novalidate>
            {{ form.hidden_tag() }}
            
            <!-- ========== RACK IDENTIFICATION ========== -->
            <div class="form-section">
                <h3 class="form-section-title">Rack Identification</h3>
                
                <div class="form-row">
                    <div class="form-group">
                        <label for="{{ form.row_number.id }}" class="form-label">
                            Row/Grid Number <span class="required">*</span>
                        </label>
                        {{ form.row_number(class="form-control" + (" is-invalid" if form.row_number.errors else ""), id="rowNumber") }}
                        <small class="form-text">e.g., G09, A12, B03</small>
                        {% if form.row_number.errors %}
                            {% for error in form.row_number.errors %}
                                <div class="invalid-feedback">{{ error }}</div>
                            {% endfor %}
                        {% endif %}
                    </div>
                    
                    <div class="form-group">
                        <label for="{{ form.cabinet_number.id }}" class="form-label">
                            Cabinet Number <span class="required">*</span>
                        </label>
                        {{ form.cabinet_number(class="form-control" + (" is-invalid" if form.cabinet_number.errors else ""), id="cabinetNumber") }}
                        <small class="form-text">e.g., 01, 02, 15</small>
                        {% if form.cabinet_number.errors %}
                            {% for error in form.cabinet_number.errors %}
                                <div class="invalid-feedback">{{ error }}</div>
                            {% endfor %}
                        {% endif %}
                    </div>
                </div>
                
                <!-- ========== DUPLICATE WARNING ========== -->
                <div class="duplicate-warning" id="duplicateWarning">
                    <span class="duplicate-warning-icon">‚ö†Ô∏è</span>
                    <span class="duplicate-warning-text">
                        This rack ID already exists! Please use a different row or cabinet number.
                    </span>
                </div>
            </div>
            
            <!-- ========== PHYSICAL SPECIFICATIONS ========== -->
            <div class="form-section">
                <h3 class="form-section-title">Physical Specifications</h3>
                
                <div class="form-row">
                    <div class="form-group">
                        <label for="{{ form.u_height.id }}" class="form-label">
                            Total U Height <span class="required">*</span>
                        </label>
                        {{ form.u_height(class="form-control" + (" is-invalid" if form.u_height.errors else "")) }}
                        <small class="form-text">Standard is 42U, half rack is 21U</small>
                        {% if form.u_height.errors %}
                            {% for error in form.u_height.errors %}
                                <div class="invalid-feedback">{{ error }}</div>
                            {% endfor %}
                        {% endif %}
                    </div>
                    
                    <div class="form-group">
                        <label for="{{ form.power_capacity.id }}" class="form-label">
                            Power Capacity (Amps)
                        </label>
                        {{ form.power_capacity(class="form-control" + (" is-invalid" if form.power_capacity.errors else "")) }}
                        <small class="form-text">Total amperage available to this rack</small>
                        {% if form.power_capacity.errors %}
                            {% for error in form.power_capacity.errors %}
                                <div class="invalid-feedback">{{ error }}</div>
                            {% endfor %}
                        {% endif %}
                    </div>
                </div>
            </div>
            
            <!-- ========== SECURITY ========== -->
            <div class="form-section">
                <h3 class="form-section-title">Security</h3>
                
                <div class="form-group">
                    <label for="{{ form.rack_code.id }}" class="form-label">
                        Rack Access Code (4 Digits)
                    </label>
                    <div class="rack-code-wrapper">
                        {{ form.rack_code(class="form-control rack-code-input" + (" is-invalid" if form.rack_code.errors else "")) }}
                        <span class="rack-code-lock">üîí</span>
                    </div>
                    <small class="form-text">4-digit code to unlock the rack cabinet (optional)</small>
                    {% if form.rack_code.errors %}
                        {% for error in form.rack_code.errors %}
                            <div class="invalid-feedback">{{ error }}</div>
                        {% endfor %}
                    {% endif %}
                </div>
            </div>
            
            <!-- ========== ADDITIONAL INFORMATION ========== -->
            <div class="form-section">
                <h3 class="form-section-title">Additional Information</h3>
                
                <div class="form-group">
                    <label for="{{ form.notes.id }}" class="form-label">Notes</label>
                    {{ form.notes(class="form-control") }}
                    <small class="form-text">Any special notes about this rack</small>
                    {% if form.notes.errors %}
                        {% for error in form.notes.errors %}
                            <div class="invalid-feedback">{{ error }}</div>
                        {% endfor %}
                    {% endif %}
                </div>
            </div>
            
            <!-- ========== ACTION BUTTONS ========== -->
            <div class="button-group">
                <button type="submit" class="btn btn-success">
                    <span style="margin-right: 8px;">‚úì</span> Add Rack
                </button>
                <a href="{{ url_for('datacenters.index') }}" class="btn btn-cancel">
                    <span style="margin-right: 8px;">‚úï</span> Cancel
                </a>
            </div>
        </form>
    </div>
</div>
{% endblock %}

{% block extra_js %}
<script>
let isDuplicate = false;
let checkDuplicateTimeout = null;

// ========== RACK ID PREVIEW & DUPLICATE CHECK ==========
function updateRackIdPreview() {
    const row = document.getElementById('rowNumber').value.toUpperCase();
    const cabinet = document.getElementById('cabinetNumber').value;
    const dcCode = '{{ floor.datacenter.code }}';
    
    if (row && cabinet) {
        const rackId = `${dcCode}-${row}.${cabinet}`;
        document.getElementById('rackIdValue').textContent = rackId;
        document.getElementById('rackIdPreview').style.display = 'block';
        
        // Clear previous timeout
        if (checkDuplicateTimeout) {
            clearTimeout(checkDuplicateTimeout);
        }
        
        // Set a small delay to avoid too many API calls while typing
        checkDuplicateTimeout = setTimeout(() => {
            checkDuplicate(rackId);
        }, 300);
    } else {
        document.getElementById('rackIdPreview').style.display = 'none';
        hideDuplicateWarning();
    }
}

// ========== CHECK FOR DUPLICATE RACK ID ==========
function checkDuplicate(rackId) {
    fetch(`{{ url_for('datacenters.check_rack_exists', rack_id='PLACEHOLDER') }}`.replace('PLACEHOLDER', rackId))
        .then(response => response.json())
        .then(data => {
            if (data.exists) {
                showDuplicateWarning();
            } else {
                hideDuplicateWarning();
            }
        })
        .catch(error => {
            console.error('Error checking for duplicate:', error);
        });
}

// ========== SHOW/HIDE DUPLICATE WARNING ==========
function showDuplicateWarning() {
    isDuplicate = true;
    document.getElementById('duplicateWarning').classList.add('show');
    document.getElementById('rowNumber').classList.add('duplicate');
    document.getElementById('cabinetNumber').classList.add('duplicate');
    document.getElementById('rackIdPreview').style.borderColor = 'rgba(239, 68, 68, 0.3)';
    document.getElementById('rackIdPreview').style.background = 'rgba(239, 68, 68, 0.05)';
    
    // Disable submit button
    const submitBtn = document.querySelector('button[type="submit"]');
    submitBtn.disabled = true;
    submitBtn.style.opacity = '0.5';
    submitBtn.style.cursor = 'not-allowed';
}

function hideDuplicateWarning() {
    isDuplicate = false;
    document.getElementById('duplicateWarning').classList.remove('show');
    document.getElementById('rowNumber').classList.remove('duplicate');
    document.getElementById('cabinetNumber').classList.remove('duplicate');
    document.getElementById('rackIdPreview').style.borderColor = '';
    document.getElementById('rackIdPreview').style.background = '';
    
    // Enable submit button
    const submitBtn = document.querySelector('button[type="submit"]');
    submitBtn.disabled = false;
    submitBtn.style.opacity = '';
    submitBtn.style.cursor = '';
}

// Update preview when row or cabinet changes
document.getElementById('rowNumber').addEventListener('input', function(e) {
    e.target.value = e.target.value.toUpperCase();
    updateRackIdPreview();
});

document.getElementById('cabinetNumber').addEventListener('input', updateRackIdPreview);

// ========== PREVENT FORM SUBMISSION IF DUPLICATE ==========
document.querySelector('form').addEventListener('submit', function(e) {
    if (isDuplicate) {
        e.preventDefault();
        alert('Cannot create rack - this rack ID already exists! Please change the row or cabinet number.');
        return false;
    }
});

// ========== RACK CODE VALIDATION ==========
document.getElementById('{{ form.rack_code.id }}').addEventListener('input', function(e) {
    // Only allow digits
    e.target.value = e.target.value.replace(/[^0-9]/g, '');
    
    // Limit to 4 digits
    if (e.target.value.length > 4) {
        e.target.value = e.target.value.slice(0, 4);
    }
});

// ========== FORM VALIDATION FEEDBACK ==========
document.querySelectorAll('.form-control').forEach(function(input) {
    input.addEventListener('input', function() {
        if (this.classList.contains('is-invalid')) {
            this.classList.remove('is-invalid');
            const feedback = this.parentElement.querySelectorAll('.invalid-feedback');
            feedback.forEach(function(msg) {
                msg.style.display = 'none';
            });
        }
    });
});

// ========== INITIALIZE ON LOAD ==========
document.addEventListener('DOMContentLoaded', function() {
    updateRackIdPreview();
});
</script>
{% endblock %}