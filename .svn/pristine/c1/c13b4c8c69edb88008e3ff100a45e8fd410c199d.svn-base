<!--
File: templates/datacenters/add_floor.html
Purpose: Form template for adding floors to a data center
Version: 1.0.0
Author: iambilky

Revision History:
- v1.0.0: Initial creation with form fields and context display
-->

{% extends "base.html" %}

{% block title %}Add Floor{% endblock %}

{% block extra_css %}
<style>
    /* ========== CONTEXT BAR ========== */
    .context-bar {
        background: rgba(59, 130, 246, 0.1);
        border: 1px solid rgba(59, 130, 246, 0.2);
        border-radius: 12px;
        padding: 20px;
        margin-bottom: 30px;
        display: flex;
        align-items: center;
        gap: 20px;
    }
    
    .context-icon {
        font-size: 2rem;
    }
    
    .context-info {
        flex: 1;
    }
    
    .context-label {
        color: #8b92a5;
        font-size: 0.9rem;
        margin-bottom: 5px;
    }
    
    .context-value {
        color: #60a5fa;
        font-size: 1.5rem;
        font-weight: 600;
    }
    
    /* ========== FORM CONTAINER ========== */
    .form-container {
        max-width: 700px;
        margin: 0 auto;
    }
    
    .form-card {
        background: rgba(255, 255, 255, 0.05);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 12px;
        padding: 30px;
    }
    
    /* ========== FORM GROUPS ========== */
    .form-group {
        margin-bottom: 25px;
    }
    
    .form-label {
        display: block;
        color: #e4e6eb;
        font-weight: 500;
        margin-bottom: 8px;
        font-size: 0.95rem;
    }
    
    .form-label .required {
        color: #ef4444;
        margin-left: 3px;
    }
    
    /* ========== FORM CONTROLS ========== */
    .form-control {
        width: 100%;
        background: rgba(255, 255, 255, 0.08);
        border: 1px solid rgba(255, 255, 255, 0.15);
        border-radius: 8px;
        padding: 10px 14px;
        color: #fff;
        font-size: 1rem;
        transition: all 0.2s ease;
    }
    
    .form-control:focus {
        outline: none;
        background: rgba(255, 255, 255, 0.1);
        border-color: #60a5fa;
        box-shadow: 0 0 0 3px rgba(96, 165, 250, 0.1);
    }
    
    .form-control::placeholder {
        color: #6b7280;
    }
    
    select.form-control {
        cursor: pointer;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
        background-position: right 10px center;
        background-repeat: no-repeat;
        background-size: 20px;
        padding-right: 40px;
    }
    
    /* ========== VALIDATION FEEDBACK ========== */
    .invalid-feedback {
        display: block;
        color: #ef4444;
        font-size: 0.875rem;
        margin-top: 5px;
    }
    
    .form-control.is-invalid {
        border-color: #ef4444;
    }
    
    /* ========== HELP TEXT ========== */
    .form-text {
        display: block;
        color: #8b92a5;
        font-size: 0.875rem;
        margin-top: 5px;
    }
    
    /* ========== INFO BOX ========== */
    .info-box {
        background: rgba(59, 130, 246, 0.1);
        border: 1px solid rgba(59, 130, 246, 0.2);
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 25px;
    }
    
    .info-box-title {
        color: #60a5fa;
        font-weight: 600;
        margin-bottom: 10px;
        display: flex;
        align-items: center;
        gap: 8px;
    }
    
    .info-box-content {
        color: #e4e6eb;
        font-size: 0.95rem;
        line-height: 1.6;
    }
    
    /* ========== BUTTON GROUP ========== */
    .button-group {
        display: flex;
        gap: 15px;
        margin-top: 35px;
        padding-top: 25px;
        border-top: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .btn-success {
        background: linear-gradient(135deg, #10b981, #059669);
        border: none;
        color: white;
        padding: 12px 30px;
        border-radius: 8px;
        font-weight: 500;
        transition: all 0.2s ease;
        cursor: pointer;
    }
    
    .btn-success:hover {
        background: linear-gradient(135deg, #059669, #047857);
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3);
    }
    
    .btn-cancel {
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        color: #e4e6eb;
        padding: 12px 30px;
        border-radius: 8px;
        font-weight: 500;
        transition: all 0.2s ease;
        text-decoration: none;
        cursor: pointer;
    }
    
    .btn-cancel:hover {
        background: rgba(255, 255, 255, 0.15);
        color: #fff;
        border-color: rgba(255, 255, 255, 0.3);
        text-decoration: none;
    }
    
    /* ========== RESPONSIVE GRID ========== */
    .form-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 20px;
    }
    
    @media (max-width: 768px) {
        .form-row {
            grid-template-columns: 1fr;
        }
        
        .context-bar {
            flex-direction: column;
            text-align: center;
        }
    }
</style>
{% endblock %}

{% block content %}
<div class="page-header">
    <h1 class="page-title">Add New Floor</h1>
    <p class="page-subtitle">Add a floor to the data center</p>
</div>

<!-- ========== CONTEXT BAR ========== -->
<div class="context-bar">
    <div class="context-icon">üè¢</div>
    <div class="context-info">
        <div class="context-label">Adding floor to:</div>
        <div class="context-value">{{ dc.code }} - {{ dc.name }}</div>
    </div>
</div>

<div class="form-container">
    <div class="form-card">
        <!-- ========== INFO BOX ========== -->
        <div class="info-box">
            <div class="info-box-title">
                <span>‚ÑπÔ∏è</span>
                <span>About Floor Designations</span>
            </div>
            <div class="info-box-content">
                Data center providers often use confusing designations (G, A, B, etc.) instead of actual floor numbers. 
                This form lets you map their designation to the real floor location for clarity.
            </div>
        </div>
        
        <form method="POST" action="{{ url_for('datacenters.add_floor', dc_id=dc.id) }}" novalidate>
            {{ form.hidden_tag() }}
            
            <!-- ========== FLOOR MAPPING ========== -->
            <div class="form-row">
                <div class="form-group">
                    <label for="{{ form.provider_designation.id }}" class="form-label">
                        Provider Designation <span class="required">*</span>
                    </label>
                    {{ form.provider_designation(class="form-control" + (" is-invalid" if form.provider_designation.errors else "")) }}
                    <small class="form-text">The letter/code the DC provider uses</small>
                    {% if form.provider_designation.errors %}
                        {% for error in form.provider_designation.errors %}
                            <div class="invalid-feedback">{{ error }}</div>
                        {% endfor %}
                    {% endif %}
                </div>
                
                <div class="form-group">
                    <label for="{{ form.actual_floor.id }}" class="form-label">
                        Actual Floor <span class="required">*</span>
                    </label>
                    {{ form.actual_floor(class="form-control" + (" is-invalid" if form.actual_floor.errors else "")) }}
                    <small class="form-text">The real physical floor location</small>
                    {% if form.actual_floor.errors %}
                        {% for error in form.actual_floor.errors %}
                            <div class="invalid-feedback">{{ error }}</div>
                        {% endfor %}
                    {% endif %}
                </div>
            </div>
            
            <!-- ========== DESCRIPTION ========== -->
            <div class="form-group">
                <label for="{{ form.description.id }}" class="form-label">Description</label>
                {{ form.description(class="form-control") }}
                <small class="form-text">Optional notes about this floor (e.g., "Main server floor", "Network equipment floor")</small>
                {% if form.description.errors %}
                    {% for error in form.description.errors %}
                        <div class="invalid-feedback">{{ error }}</div>
                    {% endfor %}
                {% endif %}
            </div>
            
            <!-- ========== ACTION BUTTONS ========== -->
            <div class="button-group">
                <button type="submit" class="btn btn-success">
                    <span style="margin-right: 8px;">‚úì</span> Add Floor
                </button>
                <a href="{{ url_for('datacenters.index') }}" class="btn btn-cancel">
                    <span style="margin-right: 8px;">‚úï</span> Cancel
                </a>
            </div>
        </form>
    </div>
</div>
{% endblock %}

{% block extra_js %}
<script>
// ========== AUTO-UPPERCASE PROVIDER DESIGNATION ==========
document.getElementById('{{ form.provider_designation.id }}').addEventListener('input', function(e) {
    e.target.value = e.target.value.toUpperCase();
});

// ========== FORM VALIDATION FEEDBACK ==========
document.querySelectorAll('.form-control').forEach(function(input) {
    input.addEventListener('input', function() {
        if (this.classList.contains('is-invalid')) {
            this.classList.remove('is-invalid');
            const feedback = this.parentElement.querySelectorAll('.invalid-feedback');
            feedback.forEach(function(msg) {
                msg.style.display = 'none';
            });
        }
    });
});
</script>
{% endblock %}