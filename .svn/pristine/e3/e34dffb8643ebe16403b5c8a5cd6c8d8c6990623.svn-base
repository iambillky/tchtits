<!--
File: templates/pdus/index.html
Purpose: Main PDU management view with filtering and actions
Version: 1.0.2
Author: DCMS Team

Revision History:
- v1.0.0: Initial creation with PDU listing, filters, and management
- v1.0.1: Added dropdown menu for Add PDU with rack selection
- v1.0.2: Fixed filter dropdowns not working - added proper event handlers
-->

{% extends "base.html" %}

{% block title %}PDU Management{% endblock %}

{% block extra_css %}
<style>
    /* ========== SUMMARY CARDS ========== */
    .summary-cards {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }
    
    .summary-card {
        background: rgba(255, 255, 255, 0.05);
        border-radius: 12px;
        padding: 20px;
        text-align: center;
        border: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .summary-label {
        color: #8b92a5;
        font-size: 0.9rem;
        margin-bottom: 8px;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }
    
    .summary-value {
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 5px;
    }
    
    .summary-value.total { color: #60a5fa; }
    .summary-value.used { color: #f59e0b; }
    .summary-value.available { color: #10b981; }
    .summary-value.capacity { color: #a78bfa; }
    
    .summary-subtitle {
        color: #8b92a5;
        font-size: 0.85rem;
    }
    
    /* ========== FILTER BAR ========== */
    .filter-bar {
        background: rgba(255, 255, 255, 0.05);
        border-radius: 12px;
        padding: 20px;
        margin-bottom: 30px;
        display: flex;
        gap: 15px;
        align-items: center;
        flex-wrap: wrap;
    }
    
    .filter-group {
        display: flex;
        flex-direction: column;
        gap: 5px;
    }
    
    .filter-label {
        color: #8b92a5;
        font-size: 0.85rem;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }
    
    .filter-select {
        background: rgba(255, 255, 255, 0.08);
        border: 1px solid rgba(255, 255, 255, 0.15);
        border-radius: 8px;
        padding: 8px 12px;
        color: #fff;
        min-width: 150px;
        cursor: pointer;
    }
    
    .filter-select:focus {
        outline: none;
        border-color: #60a5fa;
        background: rgba(255, 255, 255, 0.1);
    }
    
    /* ========== ACTION BAR ========== */
    .action-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
    }
    
    .btn-group {
        display: flex;
        gap: 10px;
    }
    
    /* ========== PDU TABLE ========== */
    .pdu-table {
        background: rgba(255, 255, 255, 0.03);
        border-radius: 12px;
        overflow: hidden;
    }
    
    .pdu-table th {
        background: rgba(255, 255, 255, 0.05);
        color: #fff;
        font-weight: 600;
        padding: 15px;
        text-align: left;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .pdu-table td {
        color: #e4e6eb;
        padding: 12px 15px;
        border-bottom: 1px solid rgba(255, 255, 255, 0.03);
    }
    
    .pdu-table tr:hover {
        background: rgba(255, 255, 255, 0.02);
    }
    
    /* ========== BADGES ========== */
    .voltage-badge {
        padding: 4px 10px;
        border-radius: 6px;
        font-size: 0.85rem;
        font-weight: 600;
        display: inline-block;
    }
    
    .voltage-badge.v120 {
        background: rgba(96, 165, 250, 0.2);
        color: #60a5fa;
        border: 1px solid rgba(96, 165, 250, 0.3);
    }
    
    .voltage-badge.v208 {
        background: rgba(167, 139, 250, 0.2);
        color: #a78bfa;
        border: 1px solid rgba(167, 139, 250, 0.3);
    }
    
    .voltage-badge.v240 {
        background: rgba(251, 191, 36, 0.2);
        color: #fbbf24;
        border: 1px solid rgba(251, 191, 36, 0.3);
    }
    
    .phase-badge {
        padding: 4px 10px;
        border-radius: 6px;
        font-size: 0.85rem;
        font-weight: 600;
        display: inline-block;
        margin-left: 5px;
    }
    
    .phase-badge.single {
        background: rgba(52, 211, 153, 0.2);
        color: #34d399;
        border: 1px solid rgba(52, 211, 153, 0.3);
    }
    
    .phase-badge.three {
        background: rgba(245, 158, 11, 0.2);
        color: #f59e0b;
        border: 1px solid rgba(245, 158, 11, 0.3);
    }
    
    /* ========== OUTLET USAGE BAR ========== */
    .outlet-bar {
        width: 150px;
        height: 20px;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 4px;
        overflow: hidden;
        position: relative;
    }
    
    .outlet-fill {
        height: 100%;
        transition: width 0.3s ease;
    }
    
    .outlet-low { background: #10b981; }
    .outlet-medium { background: #f59e0b; }
    .outlet-high { background: #ef4444; }
    
    .outlet-text {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        font-size: 0.75rem;
        font-weight: 600;
        color: #fff;
    }
    
    /* ========== MANAGEMENT LINK ========== */
    .mgmt-link {
        color: #60a5fa;
        text-decoration: none;
        font-family: 'Courier New', monospace;
        font-size: 0.9rem;
    }
    
    .mgmt-link:hover {
        color: #93c5fd;
        text-decoration: underline;
    }
    
    /* ========== BANK INDICATORS ========== */
    .bank-info {
        display: flex;
        gap: 10px;
        font-size: 0.85rem;
    }
    
    .bank-item {
        padding: 2px 8px;
        background: rgba(255, 255, 255, 0.05);
        border-radius: 4px;
    }
    
    .bank-label {
        color: #8b92a5;
        margin-right: 5px;
    }
    
    .bank-value {
        color: #e4e6eb;
        font-weight: 600;
    }
    
    /* ========== DROPDOWN MENU ========== */
    .dropdown-menu {
        background: #1a1f2e;
        border: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .dropdown-item {
        color: #e4e6eb;
    }
    
    .dropdown-item:hover {
        background: rgba(255, 255, 255, 0.05);
        color: #fff;
    }
    
    .dropdown-divider {
        border-color: rgba(255, 255, 255, 0.1);
    }
    
    .dropdown-header {
        color: #8b92a5;
        font-size: 0.85rem;
        text-transform: uppercase;
    }
    
    /* ========== EMPTY STATE ========== */
    .empty-state {
        text-align: center;
        padding: 60px 20px;
        color: #8b92a5;
    }
    
    .empty-state-icon {
        font-size: 3rem;
        margin-bottom: 20px;
        opacity: 0.5;
    }
    
    @media (max-width: 768px) {
        .outlet-bar {
            width: 100px;
        }
        
        .filter-bar {
            flex-direction: column;
            align-items: stretch;
        }
    }
</style>
{% endblock %}

{% block content %}
<div class="page-header">
    <h1 class="page-title">Power Distribution Units</h1>
    <p class="page-subtitle">Manage PDUs, circuits, and power distribution</p>
</div>

<!-- ========== SUMMARY CARDS ========== -->
<div class="summary-cards">
    <div class="summary-card">
        <div class="summary-label">Total PDUs</div>
        <div class="summary-value total">{{ total_pdus }}</div>
        <div class="summary-subtitle">Power units</div>
    </div>
    
    <div class="summary-card">
        <div class="summary-label">Total Outlets</div>
        <div class="summary-value total">{{ total_outlets }}</div>
        <div class="summary-subtitle">All outlets</div>
    </div>
    
    <div class="summary-card">
        <div class="summary-label">Used Outlets</div>
        <div class="summary-value used">{{ used_outlets }}</div>
        <div class="summary-subtitle">Connected devices</div>
    </div>
    
    <div class="summary-card">
        <div class="summary-label">Available</div>
        <div class="summary-value available">{{ available_outlets }}</div>
        <div class="summary-subtitle">Free outlets</div>
    </div>
    
    <div class="summary-card">
        <div class="summary-label">Total Capacity</div>
        <div class="summary-value capacity">{{ total_capacity }}A</div>
        <div class="summary-subtitle">Total amperage</div>
    </div>
</div>

<!-- ========== ACTION BAR ========== -->
<div class="action-bar">
    <h2 style="color: #fff; font-size: 1.3rem;">PDU Inventory</h2>
    
    <div class="btn-group">
        <div class="dropdown">
            <button class="btn btn-primary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                <span style="margin-right: 5px;">âž•</span> Add PDU
            </button>
            <ul class="dropdown-menu">
                <li class="dropdown-header">Select a Rack to Add PDU</li>
                <li><hr class="dropdown-divider"></li>
                {% if racks %}
                    {% for rack in racks %}
                    <li>
                        <a class="dropdown-item" href="{{ url_for('pdus.add_pdu', rack_id=rack.id) }}">
                            {{ rack.rack_id }} 
                            <span style="color: #8b92a5; font-size: 0.85rem;">
                                ({{ rack.pdus.count() }} PDUs)
                            </span>
                        </a>
                    </li>
                    {% endfor %}
                {% else %}
                    <li><span class="dropdown-item" style="color: #8b92a5;">No racks available</span></li>
                {% endif %}
            </ul>
        </div>
        
        <button class="btn btn-secondary" onclick="exportTable()">
            <span style="margin-right: 8px;">ðŸ“Š</span> Export CSV
        </button>
        
        <a href="{{ url_for('pdus.power_map') }}" class="btn btn-secondary">
            <span style="margin-right: 8px;">âš¡</span> Power Map
        </a>
    </div>
</div>

<!-- ========== FILTER BAR ========== -->
<div class="filter-bar">
    <form method="GET" action="{{ url_for('pdus.index') }}" id="filterForm">
        <div class="filter-group">
            <label class="filter-label">Data Center</label>
            <select name="datacenter" class="filter-select" id="datacenterFilter">
                <option value="all">All Data Centers</option>
                {% for dc in datacenters %}
                <option value="{{ dc.id }}" {% if current_filters.datacenter == dc.id|string %}selected{% endif %}>
                    {{ dc.code }} - {{ dc.name }}
                </option>
                {% endfor %}
            </select>
        </div>
        
        <div class="filter-group">
            <label class="filter-label">Rack</label>
            <select name="rack" class="filter-select" id="rackFilter">
                <option value="all">All Racks</option>
                {% for rack in filter_racks %}
                <option value="{{ rack.id }}" {% if current_filters.rack == rack.id|string %}selected{% endif %}>
                    {{ rack.rack_id }}
                </option>
                {% endfor %}
            </select>
        </div>
        
        <div class="filter-group">
            <label class="filter-label">Voltage</label>
            <select name="voltage" class="filter-select" id="voltageFilter">
                <option value="all">All Voltages</option>
                <option value="120" {% if current_filters.voltage == '120' %}selected{% endif %}>120V</option>
                <option value="208" {% if current_filters.voltage == '208' %}selected{% endif %}>208V</option>
                <option value="240" {% if current_filters.voltage == '240' %}selected{% endif %}>240V</option>
            </select>
        </div>
        
        <div class="filter-group">
            <label class="filter-label">Capacity</label>
            <select name="capacity" class="filter-select" id="capacityFilter">
                <option value="all">All Capacities</option>
                <option value="15" {% if current_filters.capacity == '15' %}selected{% endif %}>15A</option>
                <option value="20" {% if current_filters.capacity == '20' %}selected{% endif %}>20A</option>
                <option value="30" {% if current_filters.capacity == '30' %}selected{% endif %}>30A</option>
            </select>
        </div>
    </form>
</div>

<!-- ========== PDU TABLE ========== -->
<div class="card">
    <div class="card-body" style="padding: 0;">
        {% if pdus %}
        <table class="pdu-table" style="width: 100%;">
            <thead>
                <tr>
                    <th>PDU ID</th>
                    <th>Rack Location</th>
                    <th>Circuit</th>
                    <th>Electrical</th>
                    <th>Outlets</th>
                    <th>Bank Usage</th>
                    <th>Management</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                {% for pdu in pdus %}
                <tr>
                    <td><strong>{{ pdu.identifier }}</strong></td>
                    <td>{{ pdu.rack.rack_id }}</td>
                    <td>
                        {% if pdu.circuit_id %}
                            <code>{{ pdu.circuit_id }}</code>
                        {% else %}
                            <span style="color: #6b7280;">-</span>
                        {% endif %}
                    </td>
                    <td>
                        <span class="voltage-badge v{{ pdu.voltage }}">{{ pdu.voltage }}V</span>
                        <span class="phase-badge {{ 'single' if pdu.phase == 'Single' else 'three' }}">
                            {{ pdu.phase }}
                        </span>
                        <br>
                        <small style="color: #8b92a5;">{{ pdu.capacity_amps }}A</small>
                    </td>
                    <td>
                        <div class="outlet-bar">
                            {% set usage_percent = (pdu.used_outlets / pdu.total_outlets * 100) if pdu.total_outlets > 0 else 0 %}
                            <div class="outlet-fill {% if usage_percent < 60 %}outlet-low{% elif usage_percent < 80 %}outlet-medium{% else %}outlet-high{% endif %}" 
                                 style="width: {{ usage_percent }}%;">
                            </div>
                            <span class="outlet-text">{{ pdu.used_outlets }}/{{ pdu.total_outlets }}</span>
                        </div>
                    </td>
                    <td>
                        <div class="bank-info">
                            <div class="bank-item">
                                <span class="bank-label">B1:</span>
                                <span class="bank-value">{{ pdu.bank1_used }}/12</span>
                            </div>
                            <div class="bank-item">
                                <span class="bank-label">B2:</span>
                                <span class="bank-value">{{ pdu.bank2_used }}/12</span>
                            </div>
                        </div>
                    </td>
                    <td>
                        {% if pdu.ip_address %}
                            <a href="http://{{ pdu.ip_address }}" target="_blank" class="mgmt-link">
                                {{ pdu.ip_address }}
                            </a>
                        {% else %}
                            <span style="color: #6b7280;">Unmanaged</span>
                        {% endif %}
                    </td>
                    <td>
                        <div class="btn-group">
                            <a href="{{ url_for('pdus.view_outlets', pdu_id=pdu.id) }}" 
                               class="btn btn-sm btn-secondary" title="View Outlets">
                                ðŸ”Œ
                            </a>
                            <a href="{{ url_for('pdus.edit_pdu', pdu_id=pdu.id) }}" 
                               class="btn btn-sm btn-secondary">
                                Edit
                            </a>
                            {% if pdu.used_outlets == 0 %}
                            <form method="POST" action="{{ url_for('pdus.delete_pdu', pdu_id=pdu.id) }}" 
                                  style="display: inline;" 
                                  onsubmit="return confirm('Delete PDU {{ pdu.identifier }}?');">
                                <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                            </form>
                            {% endif %}
                        </div>
                    </td>
                </tr>
                {% endfor %}
            </tbody>
        </table>
        {% else %}
        <!-- ========== EMPTY STATE ========== -->
        <div class="empty-state">
            <div class="empty-state-icon">âš¡</div>
            <h3>No PDUs Found</h3>
            <p>
                {% if current_filters.datacenter != 'all' or current_filters.rack != 'all' %}
                    No PDUs match your current filters. Try adjusting them.
                {% else %}
                    Start by adding PDUs to your racks.
                {% endif %}
            </p>
            {% if current_filters.datacenter != 'all' or current_filters.rack != 'all' %}
                <a href="{{ url_for('pdus.index') }}" class="btn btn-primary mt-3">
                    Clear Filters
                </a>
            {% endif %}
        </div>
        {% endif %}
    </div>
</div>

{% endblock %}

{% block extra_js %}
<script>
// ========== EXPORT TO CSV ==========
function exportTable() {
    const table = document.querySelector('.pdu-table');
    if (!table) {
        alert('No data to export');
        return;
    }
    
    let csv = [];
    
    // Headers
    const headers = ['PDU ID', 'Rack', 'Circuit', 'Voltage', 'Phase', 'Capacity', 'Total Outlets', 'Used Outlets', 'IP Address'];
    csv.push(headers.join(','));
    
    // Data
    const rows = table.querySelectorAll('tbody tr');
    rows.forEach(row => {
        const cells = row.querySelectorAll('td');
        const data = [
            cells[0].textContent.trim(), // PDU ID
            cells[1].textContent.trim(), // Rack
            cells[2].textContent.trim(), // Circuit
            cells[3].querySelector('.voltage-badge').textContent.trim(), // Voltage
            cells[3].querySelector('.phase-badge').textContent.trim(), // Phase
            cells[3].querySelector('small').textContent.trim(), // Capacity
            // Extract outlet numbers from the bar
            cells[4].querySelector('.outlet-text').textContent.split('/')[1], // Total outlets
            cells[4].querySelector('.outlet-text').textContent.split('/')[0], // Used outlets
            cells[6].querySelector('a') ? cells[6].querySelector('a').textContent.trim() : 'Unmanaged' // IP
        ];
        csv.push(data.join(','));
    });
    
    // Download
    const csvContent = csv.join('\n');
    const blob = new Blob([csvContent], { type: 'text/csv' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'pdu_inventory.csv';
    a.click();
}

// ========== FILTER FORM HANDLING ==========
// Add event listeners to all filter dropdowns
document.addEventListener('DOMContentLoaded', function() {
    const filterForm = document.getElementById('filterForm');
    const filterSelects = document.querySelectorAll('.filter-select');
    
    filterSelects.forEach(function(select) {
        select.addEventListener('change', function() {
            filterForm.submit();
        });
    });
});

// ========== QUICK RACK SELECTOR ==========
function quickAddPDU() {
    const racks = [
        {% for rack in racks %}
        {id: {{ rack.id }}, name: '{{ rack.rack_id }}', pdus: {{ rack.pdus.count() }}},
        {% endfor %}
    ];
    
    if (racks.length === 0) {
        alert('No racks available! Please add a rack first.');
        return;
    }
    
    if (racks.length === 1) {
        // If only one rack, go directly
        window.location.href = "{{ url_for('pdus.add_pdu', rack_id=0) }}".replace('/0', '/' + racks[0].id);
    } else {
        // Show selection
        let options = 'Select a Rack for the new PDU:\n\n';
        racks.forEach((rack, index) => {
            options += `${index + 1}. ${rack.name} (${rack.pdus} PDUs)\n`;
        });
        const choice = prompt(options + '\nEnter number:');
        if (choice && racks[choice - 1]) {
            window.location.href = "{{ url_for('pdus.add_pdu', rack_id=0) }}".replace('/0', '/' + racks[choice - 1].id);
        }
    }
}
</script>
{% endblock %}